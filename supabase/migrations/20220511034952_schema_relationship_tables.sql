-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public."Recipes_Categories"
(
    _id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "RecipeId" integer NOT NULL,
    "CategoryId" integer NOT NULL,
    "UserId" uuid,
    description character varying(240) COLLATE pg_catalog."default",
    CONSTRAINT "Recipes_Categories_pkey" PRIMARY KEY (_id, "RecipeId", "CategoryId"),
    CONSTRAINT "Categories_UserId_fk" FOREIGN KEY ("UserId")
        REFERENCES public."Users" (_id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT "Recipes_Categories_CategoryId_fk" FOREIGN KEY ("CategoryId")
        REFERENCES public."Categories" (_id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT "Recipes_Categories_RecipeId_fk" FOREIGN KEY ("RecipeId")
        REFERENCES public."Recipes" (_id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Recipes_Categories"
    OWNER to postgres;

GRANT ALL ON TABLE public."Recipes_Categories" TO authenticated;

GRANT ALL ON TABLE public."Recipes_Categories" TO anon;

GRANT ALL ON TABLE public."Recipes_Categories" TO service_role;

GRANT ALL ON TABLE public."Recipes_Categories" TO postgres;

CREATE TABLE IF NOT EXISTS public."Recipes_Ingredients"
(
    _id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "RecipeId" integer NOT NULL,
    "IngredientId" integer NOT NULL,
    "UserId" uuid,
    description character varying(240) COLLATE pg_catalog."default",
    "servingSize" numeric,
    "servingUnit" character varying(20) COLLATE pg_catalog."default",
    "createdAt" timestamp without time zone NOT NULL DEFAULT now(),
    "updatedAt" timestamp without time zone NOT NULL DEFAULT now(),
    CONSTRAINT "Recipes_Ingredients_pkey" PRIMARY KEY (_id, "RecipeId", "IngredientId"),
    CONSTRAINT "Categories_UserId_fk" FOREIGN KEY ("UserId")
        REFERENCES public."Users" (_id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT "Recipes_Ingredients_RecipeId_fk" FOREIGN KEY ("RecipeId")
        REFERENCES public."Recipes" (_id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public."Recipes_Ingredients"
    OWNER to postgres;

GRANT ALL ON TABLE public."Recipes_Ingredients" TO authenticated;

GRANT ALL ON TABLE public."Recipes_Ingredients" TO anon;

GRANT ALL ON TABLE public."Recipes_Ingredients" TO service_role;

GRANT ALL ON TABLE public."Recipes_Ingredients" TO postgres;

REVOKE ALL ON TABLE public."Users" FROM authenticated;
REVOKE ALL ON TABLE public."Users" FROM postgres;
REVOKE ALL ON TABLE public."Users" FROM service_role;
GRANT ALL ON TABLE public."Users" TO authenticated;

GRANT ALL ON TABLE public."Users" TO service_role;

GRANT ALL ON TABLE public."Users" TO postgres;

REVOKE ALL ON TABLE public."Recipes" FROM authenticated;
REVOKE ALL ON TABLE public."Recipes" FROM postgres;
REVOKE ALL ON TABLE public."Recipes" FROM service_role;
GRANT ALL ON TABLE public."Recipes" TO authenticated;

GRANT ALL ON TABLE public."Recipes" TO service_role;

GRANT ALL ON TABLE public."Recipes" TO postgres;
